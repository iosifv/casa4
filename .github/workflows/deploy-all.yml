name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}      

      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}


      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -no-color
      #   continue-on-error: true
      # - name: Terraform Outputs
      #   id: output
      #   run: terraform output
      #   continue-on-error: true


      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          # extended: true
      - name: Build Hugo
        working-directory: ./casa4-website
        run: hugo -D
      - name: List generated website files
        run: |
          ls ${{ github.workspace }}/casa4-website/public

      - name: Copy generated files to S3 Bucket
        run: aws s3 cp casa4-website/public/ s3://$(terraform output -raw website_bucket_name)/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - run: echo "🍏 This job's status is ${{ job.status }}."